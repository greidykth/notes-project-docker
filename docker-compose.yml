version: "3.8"

services:
  backend-test:
    build:
        args:
            user: sammy
            uid: 1000
        context: ./docker-files/backend/
        dockerfile: Dockerfile
    restart: on-failure
    env_file: .env
    container_name: backend-test
    image: backend/${PROJECTNAME}
    volumes:
      - ./projects/notes-backend:/app-backend
    ports: 
        - 9000:9000

  frontend-test:
    container_name: frontend-test
    build: 
        context: ./docker-files/frontend/
        dockerfile: Dockerfile
    volumes:
        - './projects/notes-frontend:/app-frontend'
        - '/app/node_modules'
    ports:
        - 3000:3000
    stdin_open: true
    environment:
        - CHOKIDAR_USEPOLLING=true
    command: npm start
      
  db-test:
    image: mysql:5.6
    platform: linux/x86_64
    container_name: database-test
    restart: on-failure
    env_file: .env
    environment:
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        MYSQL_USER: ${DB_USERNAME}
        SERVICE_TAGS: dev
        SERVICE_NAME: mysql
    volumes:
        - ./database-mysql:/docker-entrypoint-initdb.d
        - ./database-mysql:/var/lib/mysql:rw
    ports:
        - 33069:3306

  nginx-test:
    image: nginx:1.19-alpine
    restart: on-failure
    env_file: .env
    container_name: lumen-react-nginx
    working_dir: /
    ports:
        - "80:80"
    environment:
        NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".conf"
        NGINX_ENVSUBST_TEMPLATE_DIR: "/etc/nginx/conf.d"
    volumes:
        - ./projects/notes-backend/:/app-backend
        - ./projects/notes-frontend/:/app-frontend
        - ./docker-files/nginx/default.conf:/etc/nginx/conf.d/default.conf.conf